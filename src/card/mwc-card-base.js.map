{"version":3,"file":"mwc-card-base.js","sourceRoot":"","sources":["src/mwc-card-base.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {LitElement, property, query} from 'lit-element';\nimport {html, TemplateResult} from 'lit-html';\nimport {classMap} from 'lit-html/directives/class-map';\n\nexport class CardBase extends LitElement {\n  @query('[name=\"icon\"]') protected _iconSlot!: HTMLSlotElement;\n\n  @query('[name=\"button\"]') protected _buttonSlot!: HTMLSlotElement;\n\n  @property({type: Boolean}) outlined = false;\n\n  @property({type: Boolean}) fullBleed = false;\n\n  protected buttonCount = 0;\n  protected iconCount = 0;\n\n  protected onButtonSlotChanged() {\n    const buttons = this._buttonSlot.assignedNodes();\n    this.buttonCount = buttons.length;\n    if (this.buttonCount > 0) {\n      buttons.forEach((button) => {\n        const buttonElement = button as HTMLElement;\n        buttonElement.classList.add('mdc-card__action');\n        buttonElement.classList.add('mdc-card__action--button');\n      });\n    }\n    this.requestUpdate();\n  }\n\n  protected onIconSlotChanged() {\n    const icons = this._iconSlot.assignedNodes();\n    this.iconCount = icons.length;\n    if (this.iconCount > 0) {\n      icons.forEach((icon) => {\n        const iconElement = icon as HTMLElement;\n        iconElement.classList.add('mdc-card__action');\n        iconElement.classList.add('mdc-card__action--icon');\n      });\n    }\n    this.requestUpdate();\n  }\n\n  render() {\n    const classes = {'mdc-card--outlined': this.outlined};\n    return html`\n        <div class=\"mdc-card ${classMap(classes)}\">\n            <slot></slot>\n            ${this.renderActions()}\n        </div>`;\n  }\n\n  protected renderActions() {\n    const buttonSlotTemplate = html`<slot name=\"button\" @slotchange=${\n        this.onButtonSlotChanged}></slot>`;\n    const iconSlotTemplate =\n        html`<slot name=\"icon\" @slotchange=${this.onIconSlotChanged}></slot>`;\n\n    if (this.iconCount > 0 || this.buttonCount > 0) {\n      const classes = {'mdc-card__actions--full-bleed': this.fullBleed};\n\n      return html`\n        <div class=\"mdc-card__actions ${classMap(classes)}\">\n          ${this.wrapButtonSlot(buttonSlotTemplate)}\n          ${this.wrapIconSlot(iconSlotTemplate)}\n        </div>`;\n    }\n    return html`\n      ${buttonSlotTemplate}\n      ${iconSlotTemplate}\n    `;\n  }\n\n  protected wrapButtonSlot(buttonSlotTemplate: TemplateResult|string) {\n    if (this.buttonCount > 0 && !this.fullBleed) {\n      return html`\n      <div class=\"mdc-card__action-buttons\">\n        ${buttonSlotTemplate}\n      </div>`;\n    } else {\n      return buttonSlotTemplate;\n    }\n  }\n\n  protected wrapIconSlot(iconSlotTemplate: TemplateResult|string) {\n    if (this.iconCount > 0) {\n      return html`\n      <div class=\"mdc-card__action-icons\">\n        ${iconSlotTemplate}\n      </div>`;\n    } else {\n      return iconSlotTemplate;\n    }\n  }\n}\n"]}